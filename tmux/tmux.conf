# reset the keybindings  
source-file ~/.config/tmux/tmux.default-keys.conf


# General Settings
set -sg escape-time 10
set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"
set-option -g base-index 1
set-option -g renumber-windows on

# this makes the fish the default shell for tmux
set -g default-command /usr/local/bin/fish
set -g default-shell /usr/local/bin/fish

## Theme
# set -g @status-left-color 'colour1'
# set -g @current-window-color 'colour3'
# set -g @last-window-color 'colour40'
run '~/.tmux/theme/theme.tmux'

## Key Binding
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix
bind-key r source-file ~/.tmux/tmux.conf \; display-message "~/.tmux.conf reloaded"

# toggle status bar o
bind-key C-t set-option status 

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# bind-key C-p split-window -h "pry"
# bind-key t split-window -h -c ~/ "vim todo.md"
# bind-key w split-window -h -c ~/my-wiki "vim +CtrlP"


# Prompted join-pane
# bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
# bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

bind-key C-b send-keys 'tat && exit' 'C-m'




## Pane
# tmux-navigator setting
# Ctrl-hjkl to switch window
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-Left'  'select-pane -L'
bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-Down'  'select-pane -D'
bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-Up'  'select-pane -U'
bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right'  'select-pane -R'
bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-Up' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R

# this does not work
# switch to the previous pane
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-\\' select-pane -l


# Zoom current pane
bind-key -n C-Space resize-pane -Z

# Resize
bind -n M-Left resize-pane -L 1
bind -n M-Right resize-pane -R 1
bind -n M-Down resize-pane -D 1
bind -n M-Up resize-pane -U 1

bind-key b break-pane -d


## Window

# Create new window 
bind W new-window -c '#{pane_current_path}'
# kill the pane
bind-key -n M-w kill-pane

# Split
bind-key C-_ split-window -v  -c '#{pane_current_path}'
bind-key C-\\ split-window -h -c '#{pane_current_path}'

# Switchin windows
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind C-Right next-window
bind C-Left previous-window
bind-key -n C-^ last-window


## Session

# Create new session 
bind S new-session -c '#{pane_current_path}'

# Swtich session FZF
bind C-s run -b "tmux new-window 'bash -ci fs'"

# Swtich sessions
bind C-^ switch-client -l

# kill current session and change to the next available session
bind-key -n M-s if-shell '[ $(tmux list-sessions | wc -l) -ne 1 ]' \
                    "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'" \
                    "run-shell 'tmux kill-session -t \"#S\"'"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

# source-file ~/.tmux/dracula.conf

run '~/.tmux/plugins/tpm/tpm'


