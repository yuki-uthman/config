# always load the reset file first
# source-file ~/.config/tmux/tmux.options.conf
source-file ~/.config/tmux/tmux.default-keys.conf


# General Settings

unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "~/.tmux.conf reloaded"
set-option -g default-terminal "screen-256color"
set-option -g status-keys "emacs"


## Status Bar
# uncomment to disable status bar
# set -g status off
set-option -g status-position top
set-option -g status-justify left
set-option -g status-bg '#444444'
set-option -g status-fg '#ffffff'
set-option -g status-left-length 50
set-option -g status-left "#[bold,fg=magenta] #S üçé #{=/-10/~‚àï...:pane_current_path} "
set-option -g status-right " #[fg=colour50]#(__quran) #[fg=colour160]-#(__ramadhan_remaining)#[fg=default] #(date '+%a %d %b %I:%M') #(__day_or_night) "

# Active window title color

# highlight the current window in the status bar (blue background)
#       #I - window index
#       #W - window title
#       #F - window flag
# setw -g window-status-current-format '#[bg=blue,fg=cyan,bold]#I#[bg=blue,fg=cyan]:#[fg=white]#W#[fg=dim]#F'

# Right side of status bar
#       $(echo $USER) - shows the current username
#       #H - shows the hostname of your computer
#       %h %d %Y - date in the [Mon DD YYYY] format
#       %l:%M %p - time in the [HH:MM AM/PM] format
# set -g status-right '#[fg=green][#[fg=white]#(echo $USER) @ #H#[fg=green]][#[fg=black,bold]%h %d %Y #[bg=green,fg=white,bold]%l:%M %p#[default]#[fg=green]]'

setw -g window-status-current-format "#{?window_zoomed_flag,#[bg=red],#[fg=black]}#I:#W"
setw -g window-status-format "#{?window_last_flag,#[fg=colour10],#[fg=default]}#I:#W"

setw -g window-status-current-style fg=black,bg=green
# setw -g window-status-last-style fg=green,bg=default

set -g pane-active-border-style bg=default,fg=magenta
set -g pane-border-style fg=default

## Key Binding
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# bind-key C-p split-window -h "pry"
# bind-key t split-window -h -c ~/ "vim todo.md"
# bind-key w split-window -h -c ~/my-wiki "vim +CtrlP"


# Prompted join-pane
# bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
# bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

bind-key C-b send-keys 'tat && exit' 'C-m'

# this makes the fish the default shell for tmux
set -g default-command /usr/local/bin/fish
set -g default-shell /usr/local/bin/fish



## Pane
# tmux-navigator setting
# use Ctrl-hjkl to switch window
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# this does not work
# switch to the previous pane
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-\\' select-pane -l


# Ctrl-Space to zoom current pane
bind-key -n C-Space resize-pane -Z

# Pane resize
bind -n M-Left resize-pane -L 1
bind -n M-Right resize-pane -R 1
bind -n M-Down resize-pane -D 1
bind -n M-Up resize-pane -U 1

bind-key b break-pane -d


## Window

# Create new window 
bind W new-window -c '#{pane_current_path}'
# kill the pane
bind-key -n M-w kill-pane

# Split
bind-key C-h split-window -v  -c '#{pane_current_path}'
bind-key C-v split-window -h -c '#{pane_current_path}'

# Switchin windows
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n C-\\ next-window
bind-key -n C-_ previous-window
bind-key -n C-^ last-window


## Session

# Create new session 
bind S new-session -c '#{pane_current_path}'

# Swtich session
# bind-key C-s run -b "tmux new-window 'bash -ci fs'"
bind C-s run -b "tmux new-window 'bash -ci fs'"

# kill current session
# bind -n M-s confirm-before kill-session

# kill current session and change to the next
bind-key -n M-s if-shell '[ $(tmux list-sessions | wc -l) -ne 1 ]' \
                    "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'" \
                    "run-shell 'tmux kill-session -t \"#S\"'"

set-option -g base-index 1
set-option -g renumber-windows on


# FZF 

# switch window 
# bind-key C-w run -b ftwind
# bind -n M-w run -b ftwind


# kill session 
# bind-key C-x run -b "tmux new-window 'bash -ci _tmux_kill'"
# bind -n M-x run -b "tmux new-window 'bash -ci _tmux_kill'"




